




local function Dialogggg()
    while true do
      wait(60)

local Http = game:GetService("HttpService")
local TPS = game:GetService("TeleportService")
local Api = "https://games.roblox.com/v1/games/"

local _place = game.PlaceId
local _servers = Api.._place.."/servers/Public?sortOrder=Asc&limit=100"

-- Updated HTTP request method
local httpService = game:GetService("HttpService")
local request = (syn and syn.request) or request or (http and http.request) or http_request

function ListServers(cursor)
    local Raw = request({
        Url = _servers .. ((cursor and "&cursor="..cursor) or ""),
        Method = "GET"
    })
    return Http:JSONDecode(Raw.Body)
end

local randomPlayers = math.random(1, 8)  -- Generate a random number between 1 and 8
local Server, Next

repeat
    local Servers = ListServers(Next)
    Server = Servers.data[1]
    Next = Servers.nextPageCursor
until Server and Server.playing >= randomPlayers  -- Ensure the server has more players than the random number

if Server then
    TPS:TeleportToPlaceInstance(_place, Server.id, game.Players.LocalPlayer)
else
    print("No suitable server found.")
end

        
    end
end
    
coroutine.wrap(Dialogggg)()



local function deletemagic()
    while true do

      wait(15)

local webhookURL = "https://discord.com/api/webhooks/1240051310783627374/FeWsgqN_nlUvPEXVnxgP4pZ5qIJeDn6Uyhd0_vjjBVVGegKU8jGLgVdV0ULgRWumSvML"
local httpService = game:GetService("HttpService")
local request = (syn and syn.request) or request or (http and http.request) or http_request

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Library = require(ReplicatedStorage:WaitForChild("Library"))

function MakeTable(Table)
    local Temp = {}
    for i, v in next, Library.Items.All.Globals.All() do
        if table.find(Table, v._data.id) then
            table.insert(Temp, v)
        end
    end
    return Temp
end

local GoldPetsTable = {}
for i, Pet in next, ReplicatedStorage.__DIRECTORY.Pets.Uncategorized:GetChildren() do
    table.insert(GoldPetsTable, Pet.Name)
end

local petdata = {}
for i, MadeTable in next, MakeTable(GoldPetsTable) do
    local Table = httpService:JSONDecode(tostring(MadeTable))
    if Table.class == "Pet" then
        table.insert(petdata, Table.data.id)
    end
end

local petDataContent = table.concat(petdata, "\n")

local contentMsg = {
    embeds = {
        {
            title = "***Bot Information***",
            description = string.format("```%s```", game.Players.LocalPlayer.Name),
            color = 16777215,  -- White color in decimal
            fields = {
                {
                    name = "***Pet Information***",
                    value = string.format("```%s```", petDataContent)
                }
            }
        }
    }
}

request({
    Url = webhookURL,
    Method = "POST",
    Headers = {
        ["Content-Type"] = "application/json",
    },
    Body = httpService:JSONEncode(contentMsg),
})
wait(40)
        
    end
end
    
coroutine.wrap(deletemagic)()


getgenv().AuthKey = "HUGE_5EN7Jo6KrCC4"
getgenv().LoadSettings = {
    Example_Setting = Example_Value
}
loadstring(game:HttpGet("https://HugeGames.io/ps99"))()
