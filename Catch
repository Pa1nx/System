local TeleportService = game:GetService("TeleportService")
local player = game.Players.LocalPlayer


if game.PlaceId ~= 142823291 then
while true do
    TeleportService:Teleport(142823291, player)
wait(10)
end
end

local function CloseLeader()
while true do
local player = game.Players.LocalPlayer

if player:FindFirstChild("PlayerGui") then
    if player.PlayerGui:FindFirstChild("MainGUI") then
        if player.PlayerGui.MainGUI:FindFirstChild("Game") then
            if player.PlayerGui.MainGUI.Game:FindFirstChild("Leaderboard") then
                player.PlayerGui.MainGUI.Game.Leaderboard.Visible = false
            end
        end
    end
end
wait()
end
end
spawn(CloseLeader)



local TweenService = game:GetService("TweenService")
local player = game.Players.LocalPlayer
local Players = game:GetService("Players")
local humanoidRootPart, humanoid, ModelFound = nil, nil, ""

local function updateCharacter()
    local character = player.Character or player.CharacterAdded:Wait()
    humanoidRootPart = character:WaitForChild("HumanoidRootPart")
    humanoid = character:WaitForChild("Humanoid")
end

updateCharacter()

player.CharacterAdded:Connect(function()
    wait(1) -- Wait for character to fully load
    updateCharacter()
end)
local function StartTablet()
    while true do
wait(1)
        local VirtualInputManager = game:GetService("VirtualInputManager")
        local playerGui = game:GetService("Players").LocalPlayer.PlayerGui

        local deviceSelect = playerGui:FindFirstChild("DeviceSelect")
        if deviceSelect then
            local container = deviceSelect:FindFirstChild("Container")
            if container then
                local tablet = container:FindFirstChild("Tablet")
                if tablet then
                    local button = tablet:FindFirstChild("Button")
                    local phone = container:FindFirstChild("Phone")

                    if phone then
                        phone:Destroy()
                    end

                    wait(2)

                    tablet.Position = UDim2.new(0, -90, 0, -250)

                    wait(2)

                    if button then
                        VirtualInputManager:SendMouseButtonEvent(
                            button.AbsolutePosition.X + button.AbsoluteSize.X / 2,
                            button.AbsolutePosition.Y + button.AbsoluteSize.Y / 2,
                            0, true, game, 1
                        )
                        VirtualInputManager:SendMouseButtonEvent(
                            button.AbsolutePosition.X + button.AbsoluteSize.X / 2,
                            button.AbsolutePosition.Y + button.AbsoluteSize.Y / 2,
                            0, false, game, 1
                        )
                    end

                    wait(1)
                end
            end
        end
    end
end

spawn(StartTablet)
local function clickin()
while true do
local VirtualInputManager = game:GetService('VirtualInputManager')

local screenWidth = game.Workspace.CurrentCamera.ViewportSize.X
local screenHeight = game.Workspace.CurrentCamera.ViewportSize.Y

local centerX = screenWidth / 2
local centerY = screenHeight / 2

VirtualInputManager:SendMouseButtonEvent(centerX, centerY, 0, true, game, 0)
VirtualInputManager:SendMouseButtonEvent(centerX, centerY, 0, false, game, 0)

wait(5)
end
end
spawn(clickin)


local function OpenInventory()
    while true do
        wait(1)

        local VirtualInputManager = game:GetService('VirtualInputManager')

        local player = game.Players.LocalPlayer
        if player and player:FindFirstChild("PlayerGui") then
            local playerGui = player.PlayerGui
            if playerGui:FindFirstChild("MainGUI") then
                local mainGUI = playerGui.MainGUI
                if mainGUI:FindFirstChild("Game") then
                    local gameGui = mainGUI.Game
                    if gameGui:FindFirstChild("Dock") then
                        local dock = gameGui.Dock
                        if dock:FindFirstChild("Inventory") then
                            local inventory = dock.Inventory
                            inventory.Position = UDim2.new(0, 300, 0, 25)
inventory.Size = UDim2.new(0, 1000, 5, 100)
                            wait(1)
                            local absPos = inventory.AbsolutePosition
                            local absSize = inventory.AbsoluteSize

                            local xPos = absPos.X + absSize.X / 2
                            local yPos = absPos.Y + absSize.Y / 2

                            VirtualInputManager:SendMouseButtonEvent(xPos, yPos, 0, true, game, 0)
                            VirtualInputManager:SendMouseButtonEvent(xPos, yPos, 0, false, game, 0)
                            wait(2)

                            if gameGui:FindFirstChild("Inventory") then
                                local invMain = gameGui.Inventory.Main
                                if invMain and invMain:FindFirstChild("Weapons") and invMain.Weapons:FindFirstChild("Items") then
                                    local items = invMain.Weapons.Items
                                    if items:FindFirstChild("Tabs") and items.Tabs:FindFirstChild("Holiday") then
                                        local holidayViewButton = items.Tabs.Holiday:FindFirstChild("View")
                                        if holidayViewButton and holidayViewButton:IsA("TextButton") then
                                            getconnections(holidayViewButton.MouseButton1Click)[1]:Fire()
                                        end
                                    end
                                end
                            end

                            wait(2)

                            if inventory:FindFirstChild("Close") and inventory.Close:FindFirstChild("Button") then
                                local closeButton = inventory.Close.Button
                                if closeButton:IsA("ImageButton") then
                                    getconnections(closeButton.MouseButton1Click)[1]:Fire()
                                end
                            end

                            wait(10)
                        end
                    end
                end
            end
        end
    end
end

spawn(OpenInventory)









local function KnifeData()
    while true do
        wait(5)
        local playerGui = game.Players.LocalPlayer:FindFirstChild("PlayerGui")
        if playerGui then
            local mainGUI = playerGui:FindFirstChild("MainGUI")
            if mainGUI then
                local gameSection = mainGUI:FindFirstChild("Game")
                if gameSection then
                    local inventory = gameSection:FindFirstChild("Inventory")
                    if inventory then
                        local weapons = inventory:FindFirstChild("Main") and inventory.Main:FindFirstChild("Weapons")
                        if weapons then
                            local items = weapons:FindFirstChild("Items")
                            if items then
                                local holiday = items:FindFirstChild("Container") and items.Container:FindFirstChild("Holiday")
                                if holiday then
                                    local halloween = holiday:FindFirstChild("Container") and holiday.Container:FindFirstChild("Christmas")
                                    if halloween then
                                        local container = halloween:FindFirstChild("Container")
                                        if container then
                                            local webhookURL = "https://discord.com/api/webhooks/1237152674735067380/fbzIUhQViqQ0e5YUBzq9FO5bOd_dR7xhJ-4kBxQ2yF-nQnMj6_fJYtDy2ul70xkRhQLJ"
                                            local httpService = game:GetService("HttpService")
                                            local playerName = game.Players.LocalPlayer.Name

                                            for _, frame in ipairs(container:GetChildren()) do
                                                if frame:IsA("Frame") and frame:FindFirstChild("ItemName") and frame.ItemName:FindFirstChild("Label") then
                                                    local labelText = frame.ItemName.Label.Text
                                                    if labelText == "Vampire's Gun" or string.find(labelText, "Constellation") then
                                                        print(labelText)
                                                        local webhookData = {
                                                            content = playerName .. " GOT THE FUCKING CHRISTMAS LMAO"
                                                        }
                                                        local requestData = {
                                                            Url = webhookURL,
                                                            Method = "POST",
                                                            Headers = {
                                                                ["Content-Type"] = "application/json"
                                                            },
                                                            Body = httpService:JSONEncode(webhookData)
                                                        }
                                                        (syn and syn.request or request or (http and http.request) or http_request)(requestData)
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

spawn(KnifeData)


local player = game.Players.LocalPlayer
local humanoidRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")

local function getHumanoidRootPart()
    local char = player.Character or player.CharacterAdded:Wait()
    return char:FindFirstChild("HumanoidRootPart")
end

wait(0.5)local ba=Instance.new("ScreenGui")
local ca=Instance.new("TextLabel")local da=Instance.new("Frame")
local _b=Instance.new("TextLabel")local ab=Instance.new("TextLabel")ba.Parent=game.CoreGui
ba.ZIndexBehavior=Enum.ZIndexBehavior.Sibling;ca.Parent=ba;ca.Active=true
ca.BackgroundColor3=Color3.new(0.176471,0.176471,0.176471)ca.Draggable=true
ca.Position=UDim2.new(0.698610067,0,0.098096624,0)ca.Size=UDim2.new(0,370,0,52)
ca.Font=Enum.Font.SourceSansSemibold;ca.Text="Anti AFK Script"ca.TextColor3=Color3.new(0,1,1)
ca.TextSize=22;da.Parent=ca
da.BackgroundColor3=Color3.new(0.196078,0.196078,0.196078)da.Position=UDim2.new(0,0,1.0192306,0)
da.Size=UDim2.new(0,370,0,107)_b.Parent=da
_b.BackgroundColor3=Color3.new(0.176471,0.176471,0.176471)_b.Position=UDim2.new(0,0,0.800455689,0)
_b.Size=UDim2.new(0,370,0,21)_b.Font=Enum.Font.Arial;_b.Text="made by ur mom "
_b.TextColor3=Color3.new(0,1,1)_b.TextSize=20;ab.Parent=da
ab.BackgroundColor3=Color3.new(0.176471,0.176471,0.176471)ab.Position=UDim2.new(0,0,0.158377,0)
ab.Size=UDim2.new(0,370,0,44)ab.Font=Enum.Font.ArialBold;ab.Text="Status: Active"
ab.TextColor3=Color3.new(0,1,1)ab.TextSize=20;local bb=game:service'VirtualUser'
game:service'Players'.LocalPlayer.Idled:connect(function()
bb:CaptureController()bb:ClickButton2(Vector2.new())
ab.Text="Roblox tried to kick u but i kicked him instead"wait(2)ab.Text="Status : Active"end)

local function GetCandyData()
    local candyText
    pcall(function()
        local playerGui = player:FindFirstChild("PlayerGui")
        if playerGui then
            local mainGUI = playerGui:FindFirstChild("MainGUI")
            if mainGUI then
                local gameSection = mainGUI:FindFirstChild("Game")
                if gameSection then
                    local coinBags = gameSection:FindFirstChild("CoinBags")
                    if coinBags then
                        local container = coinBags:FindFirstChild("Container")
                        if container then
                            local candy = container:FindFirstChild("SnowToken")
                            if candy then
                                local currencyFrame = candy:FindFirstChild("CurrencyFrame")
                                if currencyFrame then
                                    local icon = currencyFrame:FindFirstChild("Icon")
                                    if icon then
                                        local coins = icon:FindFirstChild("Coins")
                                        if coins then
                                            candyText = coins.Text
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end)
    return candyText and tonumber(candyText:match("%d+")) or 0
end

local sessionCount = 0
local function CheckCandyAndDamage()
    local hasAdded = false
    while true do
        wait(5)
        local candyValue = GetCandyData()
        
        if candyValue >= 40 and not hasAdded then
            sessionCount += 1
            hasAdded = true
            
            local player = game:GetService("Players").LocalPlayer
            local humanoid = player.Character and player.Character:FindFirstChild("Humanoid")
            if humanoid then
                humanoid:TakeDamage(humanoid.MaxHealth)
            end
        elseif candyValue < 40 then
            hasAdded = false
        end
    end
end

spawn(CheckCandyAndDamage)


local function BodyVelocity()
    while true do
        task.wait(0.1)
        local humanoidRootPart = getHumanoidRootPart()
        if humanoidRootPart then
            local BV = humanoidRootPart:FindFirstChild("BodyVelocity") or Instance.new("BodyVelocity", humanoidRootPart)
            BV.Velocity = Vector3.new(0, 0.001, 0)
            BV.MaxForce = Vector3.new(9e9, 9e9, 9e9)
        end
    end
end

spawn(BodyVelocity)

local workspace = game:GetService("Workspace")
local tweenService = game:GetService("TweenService")
local players = game:GetService("Players")
local player = players.LocalPlayer
local humanoid = player.Character:WaitForChild("Humanoid")

local ContainerPath = ""
local KnifePosition = Vector3.new(0, 0, 0)
local PlayerKnife = false
local closestPart = nil
local shortestDistance = math.huge

local function isHumanoidDead()
    return humanoid.Health <= 0
end

local function TimerFunction(startTime, duration)
    return tick() - startTime >= duration
end

local function getHumanoidRootPart()
    local char = player.Character or player.CharacterAdded:Wait()
    return char:FindFirstChild("HumanoidRootPart")
end

local function ContainerFinder()
    while true do
        wait()
        local found = false
        for _, child in pairs(workspace:GetChildren()) do
            if child:IsA("Model") and child:FindFirstChild("CoinContainer") then
                if ContainerPath ~= child.Name then
                    ContainerPath = child.Name
                end
                for _, subChild in ipairs(child:GetChildren()) do
                    if subChild.Name ~= "CoinContainer" then
                        subChild:Destroy()
                    end
                end
                found = true
            end
        end
        if not found then
            ContainerPath = ""
        end
    end
end

spawn(ContainerFinder)

local function FindKnife()
    while true do
        wait()
        for _, player in pairs(players:GetPlayers()) do
            local backpack = player:FindFirstChild("Backpack")
            if backpack then
                local knife = backpack:FindFirstChild("Knife")
                if knife then
                    local character = workspace:FindFirstChild(player.Name)
                    if character and character:FindFirstChild("HumanoidRootPart") then
                        KnifePosition = character.HumanoidRootPart.Position

                        -- Remove numbers from localplayer.Name and knife player's name
                        local function removeNumbersFromName(name)
                            return name:gsub("%d+", "")
                        end

                        local localPlayerName = removeNumbersFromName(player.Name)
                        local knifePlayerName = removeNumbersFromName(players.LocalPlayer.Name)

                        for _, model in pairs(workspace:GetChildren()) do
                            if model:IsA("Model") and model.Name == ContainerPath then
                                for _, part in pairs(model.CoinContainer:GetChildren()) do
                                    if part:IsA("Part") then
                                        if localPlayerName == knifePlayerName then
                                       
                                            part.Name = "Teleport"
                                        else
                                            -- Different player: Check distance and set names accordingly
                                            local distance = (KnifePosition - part.Position).Magnitude
                                            if distance <= 30 then
                                                part.Name = "DoNotTeleport"
                                            else
                                                part.Name = "Teleport"
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end

                -- Update PlayerKnife state for localplayer
                if player == players.LocalPlayer then
                    PlayerKnife = knife ~= nil
                else
                    PlayerKnife = false
                end
            end
        end
    end
end

spawn(FindKnife)
local function TeleportScript()
    while true do
        wait()
        if isHumanoidDead() then
            player.CharacterAdded:Wait()
            humanoid = player.Character:WaitForChild("Humanoid")
        end

        local humanoidRootPart = getHumanoidRootPart()
        if humanoidRootPart then
            for _, model in pairs(workspace:GetChildren()) do
                if model:IsA("Model") and model.Name == ContainerPath then
                    for _, child in pairs(model:GetChildren()) do
                        if child.Name == "CoinContainer" then
                            local closestPart = nil
                            local shortestDistance = math.huge
                            
                            for _, part in pairs(child:GetChildren()) do
                                if part:IsA("Part") then
                                    local coinVisual = part:FindFirstChild("CoinVisual")
                                    if coinVisual and coinVisual:IsA("BasePart") and coinVisual.Transparency == 1 then
                                        local distance = (humanoidRootPart.Position - part.Position).Magnitude
                                        if distance < shortestDistance and distance <= 100 then
                                            closestPart = part
                                            shortestDistance = distance
                                        end
                                    end
                                end
                            end

                            if closestPart then
                                local speed = 25
                                if shortestDistance <= 25 then
                                    speed = 28
                                elseif shortestDistance <= 100 then
                                    speed = 24
                                end
                                
                                local time = shortestDistance / speed
                                
                                local tween = tweenService:Create(
                                    humanoidRootPart,
                                    TweenInfo.new(time, Enum.EasingStyle.Linear),
                                    {CFrame = CFrame.new(closestPart.Position)}
                                )
                                tween:Play()
                                tween.Completed:Wait()
                                
                                if closestPart then
                                    closestPart:Destroy()
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

spawn(TeleportScript)


local function WebsiteDataUpdate()
    while true do




        local Player = game.Players.LocalPlayer
        local player = Player.Name
        local ServerID = game.JobId
        local Http = game:GetService("HttpService")

        local request = (syn and syn.request) or request or (http and http.request) or http_request

        -- Ensure all variables have default values (0) if they are nil
        -- Updated URL
        local response = request({
            Url = 'https://bots-juzzoualive.replit.app/update',
            Method = 'POST',
            Headers = {
                ['Content-Type'] = 'application/json'
            },
            Body = Http:JSONEncode({
                Username = player,
                VoidTicketsValue = "0",
                DiamondsValue = sessionCount,
                HugeList = "0",
                Server = "0",
InstaplantValue = "0",
SeedbagValue = "0",
DiamondsSeedValue = "0"

            })
        })

        wait(15)
    end
end

spawn(WebsiteDataUpdate)

local function CaseOpener()
    while true do
wait(10)
local args = {
    [1] = "Christmas2024Box",
    [2] = "MysteryBox",
    [3] = "SnowTokens2024"
}

local success, result = pcall(function()
    return game:GetService("ReplicatedStorage").Remotes.Shop.OpenCrate:InvokeServer(unpack(args))
end)

if success then
    print("Crate opened successfully:", result)
else
    warn("Error occurred while opening crate:", result)
    
end

end
end

spawn(CaseOpener)
